THIS O(n2) solution doesn't work:******************************************************

    if(prices.size() == 1)
    {
        return 0;
    }
    for(int i =0; i<prices.size()-1; i++)
    {
        for(int j= i+1; j<prices.size() ; j++)
        {
            int profit = prices[j] - prices[i];
            if(profit > maxP)
            {
                maxP = profit;
            }
        }
    }
    return maxP;
}

Use this O(n) solution ******************************************************************

class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int buyPrice = prices[0];
        int profit = 0;

        for (int i = 1; i < prices.size(); i++) {
            if (buyPrice > prices[i]) {
                buyPrice = prices[i];
            }

            profit = max(profit, prices[i] - buyPrice);
        }

        return profit;        
    }
};
