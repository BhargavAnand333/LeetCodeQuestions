NOTE: Remember to use modulo for rotation questions

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if (!head || k == 0) return head;


        ListNode* home = head;
        int count = 1;
        while(head->next != nullptr)
        {
            head = head->next;
            count++;
        }
        
        head->next = home;
        
        k = k%count;
        int steps = count - k;



        ListNode* newtail = home;
        for(int i=1; i<steps; i++)
        {
            newtail = newtail->next;
        }
        
        ListNode* newhead = newtail->next;
        newtail->next = nullptr;

        return newhead;
    }
};
