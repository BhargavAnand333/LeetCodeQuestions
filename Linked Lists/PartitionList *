USE TWO POINTER APPROACH. IT'S EASIER THAN IT LOOKS

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* partition(ListNode* head, int x) {
        ListNode* lessHead = new ListNode(0);
        ListNode* greaterHead = new ListNode(0);

        ListNode* lessCurrent = lessHead;
        ListNode* greaterCurrent = greaterHead;

        while(head != nullptr)
        {
            if(head->val < x)
            {
                lessCurrent->next = head;
                lessCurrent = lessCurrent->next;
            }
            else
            {
                greaterCurrent->next = head;
                greaterCurrent = greaterCurrent->next;
            }

            head = head->next;
        }
        greaterCurrent->next = nullptr;
        lessCurrent->next = greaterHead->next;

        ListNode* newHead = lessHead->next;

        delete lessHead;
        delete greaterHead;

        return newHead;
    }
};
